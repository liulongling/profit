<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.profit.base.mapper.BondStatisticsLogMapper">
  <resultMap id="BaseResultMap" type="com.profit.base.domain.BondStatisticsLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="stock" jdbcType="DOUBLE" property="stock" />
    <result column="ready" jdbcType="DOUBLE" property="ready" />
    <result column="liability" jdbcType="DOUBLE" property="liability" />
    <result column="profit" jdbcType="DOUBLE" property="profit" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stock, ready, liability, profit, create_time
  </sql>
  <select id="selectByExample" parameterType="com.profit.base.domain.BondStatisticsLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bond_statistics_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bond_statistics_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bond_statistics_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.profit.base.domain.BondStatisticsLogExample">
    delete from bond_statistics_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.profit.base.domain.BondStatisticsLog">
    insert into bond_statistics_log (id, stock, ready, 
      liability, profit, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{stock,jdbcType=DOUBLE}, #{ready,jdbcType=DOUBLE}, 
      #{liability,jdbcType=DOUBLE}, #{profit,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.profit.base.domain.BondStatisticsLog">
    insert into bond_statistics_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="ready != null">
        ready,
      </if>
      <if test="liability != null">
        liability,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=DOUBLE},
      </if>
      <if test="ready != null">
        #{ready,jdbcType=DOUBLE},
      </if>
      <if test="liability != null">
        #{liability,jdbcType=DOUBLE},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.profit.base.domain.BondStatisticsLogExample" resultType="java.lang.Long">
    select count(*) from bond_statistics_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bond_statistics_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=DOUBLE},
      </if>
      <if test="record.ready != null">
        ready = #{record.ready,jdbcType=DOUBLE},
      </if>
      <if test="record.liability != null">
        liability = #{record.liability,jdbcType=DOUBLE},
      </if>
      <if test="record.profit != null">
        profit = #{record.profit,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bond_statistics_log
    set id = #{record.id,jdbcType=BIGINT},
      stock = #{record.stock,jdbcType=DOUBLE},
      ready = #{record.ready,jdbcType=DOUBLE},
      liability = #{record.liability,jdbcType=DOUBLE},
      profit = #{record.profit,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.profit.base.domain.BondStatisticsLog">
    update bond_statistics_log
    <set>
      <if test="stock != null">
        stock = #{stock,jdbcType=DOUBLE},
      </if>
      <if test="ready != null">
        ready = #{ready,jdbcType=DOUBLE},
      </if>
      <if test="liability != null">
        liability = #{liability,jdbcType=DOUBLE},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.profit.base.domain.BondStatisticsLog">
    update bond_statistics_log
    set stock = #{stock,jdbcType=DOUBLE},
      ready = #{ready,jdbcType=DOUBLE},
      liability = #{liability,jdbcType=DOUBLE},
      profit = #{profit,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>